{
  "_from": "ack-angular-webcam",
  "_id": "ack-angular-webcam@1.9.3",
  "_inBundle": false,
  "_integrity": "sha512-eq0bY1UAKc+8BXUN0d/SU9BDYbm1HvscOn5TKnVDQ6qDsly+Rw3tmKweAY0J4Kqy1aigyN4KBf4V2PfkSX2LhA==",
  "_location": "/ack-angular-webcam",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "ack-angular-webcam",
    "fetchSpec": "latest",
    "name": "ack-angular-webcam",
    "raw": "ack-angular-webcam",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ack-angular-webcam/-/ack-angular-webcam-1.9.3.tgz",
  "_shasum": "5cc05d8456b48ff7e927f2024b847947b8a626f4",
  "_spec": "ack-angular-webcam",
  "_where": "/media/alan/D21084A010848D63/angular-face-api/face-api-angular/face-api",
  "author": {
    "name": "Akcer Apple"
  },
  "bugs": {
    "url": "https://github.com/ackerapple/ack-angular-webcam/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Angular2 webcam component. Based on MediaDevices and getUserMedia.js ",
  "devDependencies": {},
  "directories": {
    "example": "example"
  },
  "homepage": "https://github.com/ackerapple/ack-angular-webcam#readme",
  "keywords": [
    "angular2",
    "getusermedia",
    "gum",
    "ng2",
    "video",
    "webcam"
  ],
  "license": "MIT",
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "main": "index.js",
  "name": "ack-angular-webcam",
  "optionalDependencies": {},
  "readme": "\n# ack-angular-webcam\nA cross-browser Angular component, it will use the browser's native `getUserMedia()` implementation, otherwise an optional Flash fallback is available. [Demo Page Here\n](https://ackerapple.github.io/ack-angular-webcam/)\n\n[![hire me](https://ackerapple.github.io/resume/assets/images/hire-me-badge.svg)](https://ackerapple.github.io/resume/)\n[![npm version](https://badge.fury.io/js/ack-angular-webcam.svg)](http://badge.fury.io/js/ack-angular-webcam)\n[![npm downloads](https://img.shields.io/npm/dm/ack-angular-webcam.svg)](https://npmjs.org/ack-angular-webcam)\n[![Dependency Status](https://david-dm.org/ackerapple/ack-angular-webcam.svg)](https://david-dm.org/ackerapple/ack-angular-webcam)\n\n### BEWARE\n- HTTPS or localhost required\n  - Host must be localhost or an https connection\n  - SAFARI seems to always always always require an https connection (no localhost)\n- Internet Explorer<span name=\"internet-explorer\" id=\"internet-explorer\" ref=\"old md title link\"></span>\n  - Internet Explorer is not at all supported. Sorry not sorry\n  - **Internet Edge** is fully supported\n\n### Table of Contents\n\n- [Screenshot](#screenshot)\n- [Notes](#notes)\n- [ack-webcam Component](#ack-webcam-component)\n  - [Getting Started](#getting-started)\n    - [Installation](#installation)\n    - [Importing](#importing)\n    - [Example Usage](#example-usage)\n  - [Bindings](#bindings)\n  - [Flash Fallback](#flash-fallbak)\n  - [Example and Tests](#example-and-tests)\n    - [Locally-Test](#locally-test)\n- [ack-media-devices Directive](#ack-media-devices-directive)\n- [WoRk On ThIs PaCkAgE](#work-on-this-package)\n- [If You Like ack-webpack](#if-you-like-ack-webpack)\n- [Credits](#credits)\n- [Spec References](#spec-references)\n\n## Screenshot\n\n![Screenshot](https://ackerapple.github.io/ack-angular-webcam/screenshot.png)\n\n## Notes\n\nThis component is based on [MediaDevices](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices)  and [getUserMedia.js Polyfill](https://github.com/addyosmani/getUserMedia.js).\n\nPlease, check original repository for clear understanding\n\n# ack-webcam Component\n\n## Getting Started\n\n### Installation\n```bash\nnpm install ack-angular-webcam --save-dev\n```\n\n### Importing\n\n```javascript\nimport { WebCamModule } from 'ack-angular-webcam';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    WebCamModule\n  ],\n  declarations: [\n    AppComponent\n  ],\n  bootstrap: [ AppComponent ]\n})\nclass AppModule {\n}\nexport default AppModule;\n```\n\n### Example Usage\n\napp.component.ts\n```javascript\nimport { Component } from '@angular/core';\nimport { Http, Request } from '@angular/http';\n\n//imported here just for type checking. Optional\nimport { WebCamComponent } from 'ack-angular-webcam';\n\nconst template = `\n<ack-webcam\n  [(ref)]   = \"webcam\"\n  [options] = \"options\"\n  (success) = \"onCamSuccess($event)\"\n  (catch)   = \"onCamError($event)\"\n></ack-webcam>\n<button (click)=\"genBase64()\"> generate base64 </button>\n<button (click)=\"genPostData()\"> generate post data </button>\n`\n\n@Component({\n  selector:'app-component',\n  template:template\n}) export class AppComponent{\n  webcam:WebCamComponent//will be populated by <ack-webcam [(ref)]=\"webcam\">\n  base64\n\n  constructor(public http:Http){}\n\n  genBase64(){\n    this.webcam.getBase64()\n    .then( base=>this.base64=base)\n    .catch( e=>console.error(e) )\n  }\n\n  //get HTML5 FormData object and pretend to post to server\n  genPostData(){\n    this.webcam.captureAsFormData({fileName:'file.jpg'})\n    .then( formData=>this.postFormData(formData) )\n    .catch( e=>console.error(e) )\n  }\n\n  //a pretend process that would post the webcam photo taken\n  postFormData(formData){\n    const config = {\n      method:\"post\",\n      url:\"http://www.aviorsciences.com/\",\n      body: formData\n    }\n\n    const request = new Request(config)\n\n    return this.http.request( request )\n  }\n\n  onCamError(err){}\n\n  onCamSuccess(){}\n}\n```\n\n## Bindings\nack-angular-webcam inputs and outputs\n\n```typescript\n[videoDevice]          : MediaDeviceInfo\n[videoDeviceId]        : string\n[audioDeviceId]        : string\n[mime]                 : string = 'image/jpeg'\n[useParentWidthHeight] : boolean = false\n[facingMode]           : \"user\"|\"environment\"|\"left\"|\"right\"|string\n[reflect]:boolean      //mirror camera image\n\n(success) = new EventEmitter()\n(catch) : EventEmitter<Error> = new EventEmitter()\n\n[(ref)]   : WebCamComponent\n[(error)] : Error\n\n[options]:{\n  video    : boolean | MediaTrackConstraints\n  audio    : boolean\n  width    : number\n  height   : number\n  fallback : boolean\n  fallbackSrc: string\n  fallbackMode: string\n  fallbackQuality: number\n}\n```\n\n> Binding Resource Links\n>> - [MediaDeviceInfo](https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo)\n>> - [MediaTrackConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints)\n\nTested for tablet (Android 4.4.2 GT-N5110) and phone (Android 4.1.2 GT-I8268)\n\n## Flash Fallback\n\nQuite Simple: You must indicate the URL of the swf fallback file named **jscam_canvas_only.swf**\n\n> This file is included and located at ack-angular-webcam/jscam_canvas_only.swf\n\n\n\n## Example and Tests\n\nYou can check example using following npm commands:\n```\nnpm run watch\n```\n\n### Locally Test\nType the following commands in a command prompt terminal\n\nStep 1 of 4\n```\ngit clone https://github.com/ackerapple/ack-angular-webcam -b master\n```\n\nStep 2 of 4\n```\ncd ack-angular-webcam\n```\n\nStep 3 of 4\n```\nnpm install\n```\n\nStep 4 of 4\n```\nnpm run watch\n```\n\n> After step 4, a web browser should auto open a demo page and any code changes you perform to ack-angular-webcam will cause an auto-refresh of browser\n\n# ack-media-devices Directive\nGet listing of users media devices\n\n```html\n<ack-media-devices\n  [(array)]=\"devices\"\n  [(error)]=\"deviceListingError\"\n></ack-media-devices>\n```\n\n**Bindings**\n```typescript\n[(array)]:MediaDeviceInfo[] = []\n[(error)]:Error\n[(videoInputs)]:MediaDeviceInfo[]\n[(audioInputs)]:MediaDeviceInfo[]\n[(audioOutputs)]:MediaDeviceInfo[]\n\n(catch):EventEmitter<Error> = new EventEmitter()\n```\n\n\n## WoRk On ThIs PaCkAgE\nNobodies perfect\n\n> Source files are on not the default github branch\n\n- [Source files here](https://github.com/AckerApple/ack-angular-webcam/tree/master)\n\n### Process to pull request\n- Make changes in  master branch\n- Change package version number based on impact of change 0.0.0\n- npm run build\n\n## If You Like ack-webpack\nYou might also want to give these packages a try\n- [ack-angular](https://www.npmjs.com/package/ack-angular)\n- [ack-angular-fx](https://www.npmjs.com/package/ack-angular-fx)\n- [ack-css-boot](https://www.npmjs.com/package/ack-css-boot)\n\n## Credits\n- [pre-fork package credits](https://github.com/addyosmani/getUserMedia.js#credits)\n- Fork from : [Artur Basak](https://www.npmjs.com/~archik408)\n- Forked by : [Acker Apple](https://www.npmjs.com/~ackerapple)\n\n## Spec References\n* [MediaDevices](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices)\n* [getUserMedia()](https://w3c.github.io/mediacapture-main/getusermedia.html)\n* [WebRTC 1.0](http://w3c.github.io/webrtc-pc/)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ackerapple/ack-angular-webcam.git"
  },
  "typings": "index.d.ts",
  "version": "1.9.3"
}
